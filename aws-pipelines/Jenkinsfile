pipeline
{
    agent any
    
    /*tools 
    { 
        // aws tools or docker?
    }*/
    
    parameters 
    {
        string(name: 'SESSION_TOKEN', defaultValue: '', description: 'Enter the current session token here')
        string(name: 'REGION', defaultValue: 'eu-west-1', description: 'Set the region here')
    }
    
    stages
    {
        stage ('Slack Notifier')
        {
          steps 
          {
            // send build started notifications
            // slackSend (color: '#FFFF00', message: "STARTED => JOB ::  '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            echo 'Slack Notifier stage done...'  
          }
        } 
        stage('Build AMI') 
        {
            steps
            {
                // run the job here
                echo 'Building from fca-job ....'
                //build 'fca_demo_build'
                script 
                {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',credentialsId: 'awsCredentials',accessKeyVariable: 'AWS_ACCESS_KEY_ID',secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) 
                    {
                       echo "AWS_ACCESS_KEY_ID ${env.AWS_ACCESS_KEY_ID}"
                       echo "AWS_SECRET_ACCESS_KEY ${env.AWS_SECRET_ACCESS_KEY}"
                       echo "SESSION_TOKEN: ${params.SESSION_TOKEN}"
                       echo "REGION: ${params.REGION}"
                       echo 'Build stage done...'
                       
                       sh '''#!/bin/sh
                             echo "----- RUNNING AWS SCRIPTS ------"
                             # export AWS_SESSION_TOKEN = ${params.SESSION_TOKEN}
                             # export AWS_DEFAULT_REGION= ${params.REGION}
                             export AWS_SESSION_TOKEN=
                             export AWS_DEFAULT_REGION=eu-west-1
                             trigger=`curl  --user "jenkins-admin:c96dada47f05303fac2524" $BUILD_URL/api/json`
                             result=`echo $trigger | jq '.actions[0].causes[0].shortDescription'`
                             timestamp=$(date +%s)
                             if [[ $result =~ "timer" ]]; then
                                  echo "This is started by timer"
                                  sed -i 's/fca-image-mysql/fca-mage-mysql-timer/g' /var/lib/jenkins/workspace/fca_demo_build/fca-image.yml
                                  sed -i "s/bitbucket/bitbucket${timestamp}/g" /var/lib/jenkins/workspace/fca_demo_build/fca-image.yml
                                  
                                  aws cloudformation delete-stack --stack-name image-build-timer
                                  aws cloudformation wait stack-delete-complete --stack-name image-build-timer
                                  aws cloudformation deploy --template-file /var/lib/jenkins/workspace/fca_demo_build/image.yml --stack-name fca-image-build-timer --capabilities CAPABILITY_IAM
                            else
                                  aws cloudformation deploy --template-file /var/lib/jenkins/workspace/fca_demo_build/image.yml --stack-name fca-image-build --capabilities CAPABILITY_IAM
                            fi
                          '''
                    }
                }
            }
        }
    }
    post 
    {
        success
        {
            echo 'Result...'
            echo 'SUCCESS'
            //slackSend (color: '#00FF00', message: "SUCCESSFUL => JOB ::  '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure 
        {
            echo 'Result...'
            echo 'FAILED'
            //slackSend (color: '#FF0000', message: "FAILED => JOB ::  '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }  
    }
}
